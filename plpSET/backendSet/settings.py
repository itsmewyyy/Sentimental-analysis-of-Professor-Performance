"""
Django settings for django_plpSET project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l979g06^m7*8rgaqpnxg8bzujdw5i#)mf9ewzup8dr5nihnjr%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['sentiment-professor-feedback-production.up.railway.app']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'userLogin',
    'SET',
    'reportsAnalysis',
    'django_celery_beat',

    
]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = ["https://sentiment-professor-feedback.vercel.app"]  
CSRF_TRUSTED_ORIGINS = ['https://sentiment-professor-feedback.vercel.app/', 'https://sentiment-professor-feedback-production.up.railway.app/']  


MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddlewayre",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backendSet.urls'




TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                
            ],
        },
    },
]

WSGI_APPLICATION = 'backendSet.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'defaultdb',
        'USER': 'avnadmin',
        'PASSWORD': 'AVNS_cEraRL3eSt5us4l3590',
        'HOST': 'mysql-37287325-ryanintalan-a986.h.aivencloud.com',   # Or an IP Address that your DB is hosted on
        'PORT': '18189',        # Default MySQL port
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Manila'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Session expiration 
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Use database-backed sessions
SESSION_COOKIE_NAME = 'sessionid'
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = False  # Set to True if using HTTPS
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Expire session when the browser closes



CELERY_BROKER_URL = 'redis://default:HrXmnBnCQHcOyZTzjRwIotfjDGFqCQgt@redis.railway.internal:6379'  
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'redis://default:HrXmnBnCQHcOyZTzjRwIotfjDGFqCQgt@redis.railway.internal:6379'
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True


# Celery Beat
from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {
    'update_summaries_every_15mins': {
        'task': 'SET.tasks.update_summaries_batch',  # Update with your app and task name
        'schedule': crontab(minute='*/15',),    # Runs every 15 mins
    },
    'update_professor_recurring_phrases': {
        'task': 'SET.tasks.update_professor_recurring_phrases',
        'schedule': crontab(minute='*/15'),  
    },
    'count_students_and_accounts': {
        'task': 'SET.tasks.count_students_and_accounts',
        'schedule': crontab(minute='*/1'),  
    },
    'count_total_submissions': {
        'task': 'SET.tasks.count_total_submissions',
        'schedule': crontab(minute='*/1'),  
    },
}

STATICSTORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"